configfile: '../config/config2.yaml'

wildcard_constraints:
    msize="\d+"

rule all:
    input:
        expand("simulated_{species}_{msize}",species=['vih'],msize=config['size'])

rule analyse_phase:
    input:
        ref="data/ref_{species}.fasta",
        read="data/read_{species}.fastq"
    conda:
        "envs/nanosim.yaml"
    output:
        temp("simu_{species}")
    shell:
        "read_analysis.py genome -i {input.read} -rg {input.ref} -o {output} -t 20 > {output};touch {output}"

rule simu_phase:
    input:
        ref="data/ref_{species}.fasta",
        folder="simu_{species}"
    conda: 
        "envs/nanosim.yaml"
    output:
        "simulated_{species}_{msize}"
    params:
        number='10000',
        seed= config['seed'],
        msize='{msize}'
    shell:
        "simulator.py genome -rg {input.ref} -c {input.folder} -o {output} -n {params.number} -max {params.msize} -t 20 --seed {params.seed};touch {output}"

"""
rule underscore:
    input:
        link="simulated_{species}",
        real="simulated_{species}_aligned_reads.fasta"
    output:
        temp("{species}_reads1.fasta")
    shell:
        "sed -i -e 's/;/_/g' {input.real}>{output};rm {input.link}"

rule convert_header:
    input:
        link="{species}_reads1.fasta",
        real="simulated_{species}_aligned_reads.fasta"
    output:
        read="{species}_reads.fasta"
    conda:
        'envs/perl.yaml'
    shell:
        "script/convert1.pl {input.real}>{output}"
"""